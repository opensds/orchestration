version: "2.0"
name: "opensds.provision-volume"

workflows:

    main:
        type: direct
        input:
            - ipaddr
            - port
            - tenantid
            - name
            - description
            - availabilityzone
            - size
            - profileid
            - snapshotid
            - snapshotfromcloud
            - mountpoint
            - hostinfo
            - connectioninfo
            - accessprotocol
            - token
            - timeout
        output:
            tagline: "<% $.print_status %>"
        task-defaults:
          on-error:
            - fail
        tasks:
            create_volume:
                action: opensds.create-volume
                input:
                    ipaddr: "<% $.ipaddr %>"
                    port: "<% $.port %>"
                    tenantid: "<% $.tenantid %>"
                    name: "<% $.name %>"
                    description: "<% $.description %>"
                    availabilityzone: "<% $.availabilityzone %>"
                    size: '<% $.size %>'
                    profileid: "<% $.profileid %>"
                    snapshotid: "<% $.snapshotid %>"
                    snapshotfromcloud: '<% $.snapshotfromcloud %>'
                    token: "<% $.token %>"
                publish:
                   volumeid: <% task(create_volume).result.result %>
                on-success:
                    - attach_volume
            attach_volume:
                action: opensds.attach-volume
                input:
                    ipaddr: "<% $.ipaddr %>"
                    port: "<% $.port %>"
                    tenantid: "<% $.tenantid %>"
                    volumeid: <% $.volumeid %>
                    mountpoint: <% $.mountpoint %>
                    hostinfo: <% $.hostinfo %>
                    connectioninfo: <% $.connectioninfo %>
                    accessprotocol: <% $.accessprotocol %>
                    token: "<% $.token %>"
                publish:
                    print_status : <% task(attach_volume).result.stdout %>
